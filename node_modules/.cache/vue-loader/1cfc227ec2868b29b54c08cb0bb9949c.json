{"remainingRequest":"C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\src\\views\\AddCompany.vue?vue&type=template&id=49321856&","dependencies":[{"path":"C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\src\\views\\AddCompany.vue","mtime":1586613745679},{"path":"C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SS\\Desktop\\birkenfeld-lokale-unternehmen\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}